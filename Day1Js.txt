1)Write a blog on Difference between HTTP1.1 vs HTTP2
 
  INTRODUCTION : 
    ==> HTTP stands for Hyper Text Transfer Protocal.
    ==> Its is a protocol which is used transfer Hyper Text form client to server and vice versa.
    ==> Let us take an example of a client server model , once the client wants send a request to server a TCP 
 (Transmission Control Protocal)connection is made which is technically called the TCP Handshake.
    ==> Once the connection is established the HTTP request from the client is send to the server.
    ==> The HTTP is concerned about the format and structure of the request send by the client to the server.
    ==> It says how the client and server communnicates each other efficientlly over the TCP connection.
    ==> It states the syntax of the request and response messages which includes headers , status code 
 , body content.
    ==> It outlines how the client makes specific request to servers and how servers should response with the
 requested data or appropriate error message.
    ==> TCP ensures that the HTTP messages are delivered accurately and in the correct order.
    ==> HTTP1.1 and HTTP2 are the latest versions of HTTP.

  DIFFRENCE BETWEEN HTTP1.1 AND HTTP2
      
      i)Connection Handling : 
         -->In HTTP1.1 each request and response transaction require seperate TCP Connection.For example, if 
        any web page is rendered from the server its HTML document , css document and javascript or jQuery 
        document are rendered in three different TCP connections.Therefore the page is loaded slow.

         -->Whareas in HTTP2 it supports multiplexing , which all the HTML , CSS and javascript document to 
        be rendered in a single TCP connections which is simultaniously fast as compared to HTTP1.1.

      ii)Header Compression :
         -->HTTP headers are responsible for providing some additional information to server or client 
         regarding request or response which is being sent. HTTP contains information about request or response 
         information , authentication and authorisation , session control , caching , compression and encoding.

         -->In HTTP1.1 the header are sent in plain text which lead to increase in network overhead and 
         slower performance.

         -->HTTP2 uses technique called HPACK which compresses the header information and it reduces the amount
         of data transmitted over the network.

      iii)Server Push :
         -->In HTTP1.1 the server can only respond to client request , if the client needs additional information
         , it must be sent on another request which leads to slow retirival of nformation.

         -->In case of HTTP2 it works in concept called server push in which the server analyze the initial 
         request and additionally sends the related resources so the page loads faster.

      iv)Request Prioritization : 
          -->In HTTP1.1 all the request where treated equally and it is a quite drawback when dealing with 
          large number of requests.

          -->HTTP2 allows client to assign pririty to differnt requests which ensures the better user experince.
           
      v)Binary Protocal:
          -->In HTTP1.1 the request and response are transmitted as plain text which slower.But it has advantage 
          that it is in human readable format for debugging.\

          -->In HTTP2 the request and response are sent in encoded binary format resulting in improved performance.

  CONCLUTION :
     ==>HTTP2 repreasents the significant advancement over HTTP1.1 in terms of performance, efficiency and 
     user experince.
     ==>HTTP2 is loaded with several features like multiplexing,header compression , server push , request 
     prioritization and binary protocal.
     ==>HTTP2 provided seamless browsing experince over HTTP1.1



2)Write a blog about objects and its internal representation in Javascript     
    
 INTRODUCTION :

     ==>Javascript objects are containers which are use to store key-value pairs and manipulate data.
     ==>Properties in JavaScript objects can have any data type, including other objects, functions, or 
     primitive values.
     ==>It also supports support dynamic addition and modification of properties at runtime.
     ==>Properties in objects can be accessed and manipulated using dot notation or bracket notation.
     ==>JavaScript objects can be easily converted to JSON (JavaScript Object Notation) using 
     JSON.stringify() and vice versa using JSON.parse().
     ==>JSON is notation but JavaScript Object Notation which used for transmitting and storing data
     since it is very light weight.
     ==>JSON provides a simple and human-readable syntax for representing structured data.

 JAVASCRIPT OBJECTS : ITS USAGE AND INTERNAL REPREASENTATION

     ==>Let us consider a real time example to understand usage of javascript objects.
     ==>There is an web page which contains a simple HTML form and once the form is filled and submit several 
     internal operations where performed.
     ==>Once submit button is given the values where stored one by one in an object with key as input field name 
     and value as fiel value provided by the user.
     ==>Here it is important to note that internally, javaScript objects are implemented as dictionaries 
     or hash tables.
     ==>For Example :
         if form has ,
           <label for="name">Name:</label>
           <input type="text" id="id_name" name="name"><br><br>
           <label for="age">Age:</label>
           <input type="number" id="id_age" name="age"><br><br>
         
          the values in the object is stored as ,
            userInput = {
                name : "Akash",
                age : "30"
            };

     ===>In the above example 'userInput' is an object which stores name and age which is provided by the user 
     in the form.
     ==>Then the object is converted to JSON string using JSON.stringify() method to send through request to 
     server to store in database.
     ==>JSON string light weight and can easily be transmitted through network.
     ==>Then the data reaches the server , the server performs specific operations to store data in database.
     ==>Once the data is stored in database , it is again reterived form database for user confimation.
     ==>The data stored in database is again sent as JSON string and converted to object using JSON.parse() method.
     ==>Once the data is converted to object it is easily accessible through dot operator.
     ==>Then all the properties(i.e,name and age) is shown to user and confirmed.
     ==>This how the objects are repreasented in key-value pair and used effisiently in handling data.

 CONCLUTION :

      ==>Objects in JavaScript are fundamental data structures with a powerful internal representation.              
      ==>They are implemented as dictionaries or hash tables, allowing efficient property access and retrieval. 
      ==>Objects supports dynamic addition and modification of properties, and can be easily represented in JSON. 